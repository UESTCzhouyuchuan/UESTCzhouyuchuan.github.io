(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{350:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言-我对自动化测试的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言-我对自动化测试的理解"}},[s._v("#")]),s._v(" 前言 --我对自动化测试的理解")]),s._v(" "),a("p",[s._v("我认为自动化测试是从人脑测试到程序测试的一种革命。通过模拟用户操作，判读啊是否达成预期结果，不管中间发生什么，这是软件工程非常典型的黑盒测试。")]),s._v(" "),a("p",[s._v("cypress 非常强大，而且对开发者友好，提供很完善的 api，还提供了类似 promise 对象的链式调用，它因该是借鉴了 promise 实现的思想，在函数调用结束也返回了一种相同类似但状态发生改变的对象。我还很喜欢它的 get 函数，前端选手很轻易就能记着它并且拿来用，实现原理应该是通过 document.querySelector 获得 dom，然后通过该 dom 初始化一个对象，然后返回出来，模拟操作在该对象上进行，然后反映到 DOM 和视图中。")]),s._v(" "),a("h2",{attrs:{id:"安装使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装使用"}},[s._v("#")]),s._v(" 安装使用")]),s._v(" "),a("p",[s._v("由于国外源太慢，使用公司 VPN 也无济于事，为 npm 或者 yarn 指定 cypress 的下载路径。")]),s._v(" "),a("h3",{attrs:{id:"使用-npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-npm"}},[s._v("#")]),s._v(" 使用 npm")]),s._v(" "),a("p",[s._v("如下，在～/.npmrc(使用 npm)文件中添加")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CYPRESS_INSTALL_BINARY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https://npm.taobao.org/mirrors/cypress/4.1.0/mac/cypress.zip\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("新建一个 test_runner 目录，先 npm init，然后下载")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -D cypress\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"使用-yarn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-yarn"}},[s._v("#")]),s._v(" 使用 yarn")]),s._v(" "),a("p",[s._v("如果你使用 yarn，在～/.yarnrc 文件中")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("CYPRESS_INSTALL_BINARY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://npm.taobao.org/mirrors/cypress/4.1.0/mac/cypress.zip"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("yarn 也是同样道理")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -D\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("注意")]),s._v("，要根据版本和设备类型下载，去@https://npm.taobao.org/mirrors/cypress查看最新版")]),s._v(" "),a("h2",{attrs:{id:"开始第一次测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始第一次测试"}},[s._v("#")]),s._v(" 开始第一次测试")]),s._v(" "),a("p",[s._v("运行命令初始化 cypress，并打开 GUI，而且会在当前目录下生成 cypress 文件夹和 cypress.json 配置文件。然后打开其中任意一个测试用例。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${npm bin}")]),s._v("/cypress "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v("\n// 或者\n./node_modules/.bin/cypress "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v("\n// 或者\nnpx cypress "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("注意")]),s._v("可以把 cypress 安装到全局目录中，这样就可以直接运行 cypress open 命令。\ncypress 目录结构")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cypress 文件夹说明")]),s._v("\n\ncypress\n\n- fixtures // 用于存放数据文件（比如 json 或者图片），可在测试用例中引用作为模拟数据\n- integration // 用于放置你所有的测试用例\n- plugins // 用于放置自定义插件\n- support // 用于放置一些公共的功能或者配置\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"cypress-常用-cli-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cypress-常用-cli-命令"}},[s._v("#")]),s._v(" cypress 常用 CLI 命令")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("cypress run -b chrome // chrome 浏览器打开 -b 即 --brower\ncypress run -s examplez_spec.js // 运行特定的测试文件，而不是 integration 下所有的用例\n// -s 即 --spec\ncypress "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" // 交互视图也就是 GUI 环境打开 cypress，run 是命令行模式。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"cypress-编写测试用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cypress-编写测试用例"}},[s._v("#")]),s._v(" cypress 编写测试用例")]),s._v(" "),a("ol",[a("li",[s._v("首先，首行写入下面内容，表示这是 cypress 语法，会有语法提示和简介")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/// <reference types="Cypress" />')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("然后对于一个测试文件有一个全局上下文 context，第一个参数是名称简介，第二个参数是要执行的回掉函数。如下")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test spec'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("每个全局上下文可以有多个测试用例，用 it 标示，其参数和 contex 类似，在测试用例中才可以使用 cy 的 api。如下")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/// <reference types="cypress" />')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test spec'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("it")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a test sample'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    cy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'selector'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("生命周期函数\ncypress 在测试每一个关键路径模块时（即 context），提供 before/beforeEach,after/afterEach，这几个 hook")])]),s._v(" "),a("h2",{attrs:{id:"cy-的常用的-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cy-的常用的-api"}},[s._v("#")]),s._v(" cy 的常用的 API")]),s._v(" "),a("p",[s._v("API 地址"),a("a",{attrs:{href:"https://docs.cypress.io/api/commands/and.html#Syntax",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.cypress.io/api/commands/and.html#Syntax"),a("OutboundLink")],1)]),s._v(" "),a("ol",[a("li",[s._v("get 函数，参数是 css 选择器，后续操作都是在他返回的对象上进行的。get 可以获得多个结果，使用 each 函数对每个 ele 进行操作，如果直接对 get 的结果进行动作，默认选择第一个。")]),s._v(" "),a("li",[s._v("type 函数，模拟人向输入框中输入数据，参数是要输入的数据。type 也可以模拟键盘输入，格式为{键盘动作}，")]),s._v(" "),a("li",[s._v("click()，模拟人点击。")]),s._v(" "),a("li",[s._v("should，先行断言，判断符合预期，根据第一个参数决定接下来的参数，第一个参数代表状态，如下")]),s._v(" "),a("li",[s._v("be 系列"),a("code",[s._v("be.impty be.hidden be.visible be.check be.select")])]),s._v(" "),a("li",[s._v("has 系列"),a("code",[s._v("has.class has.value has.id has.attr has.focus")])]),s._v(" "),a("li",[s._v("函数还可以是一个函数，会向函数注入当前对象")]),s._v(" "),a("li",[s._v("contians()，获得满足 contians 内容的第一个 DOM。包含内容的判断依据是 text 值或者 value 值。content 可以是 string，number，或者强大的正则表达式。官方文档"),a("a",{attrs:{href:"https://docs.cypress.io/api/commands/contains.html#Syntax",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.cypress.io/api/commands/contains.html#Syntax"),a("OutboundLink")],1),s._v("。注意：contains 判断的元素必须是其前者的字元素或者本身。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"断言-assertions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#断言-assertions"}},[s._v("#")]),s._v(" 断言 Assertions")]),s._v(" "),a("p",[s._v("文档地址"),a("a",{attrs:{href:"https://docs.cypress.io/guides/references/assertions.html#Chai",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.cypress.io/guides/references/assertions.html#Chai"),a("OutboundLink")],1),s._v("\n断言分为")]),s._v(" "),a("ul",[a("li",[s._v("TDD（test drive develop），测试驱动开发。")]),s._v(" "),a("li",[s._v("BDD（behavior drive develop），行为驱动开发。")])]),s._v(" "),a("h2",{attrs:{id:"cy-实践终结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cy-实践终结"}},[s._v("#")]),s._v(" Cy 实践终结")]),s._v(" "),a("p",[s._v("首先，cypress 的每一步操作都是异步进行的，它封装的对象类 promise 对象，比 promise 多了一些成员方法属性。")]),s._v(" "),a("ul",[a("li",[s._v("it 作为一组动作，会在上一个动作完成后加入执行队列。")]),s._v(" "),a("li",[s._v("beforEach 函数接受一个执行函数，回注入到每一个 it 之前。")]),s._v(" "),a("li",[s._v("如果需要登陆，必须在每一个 case（即 it）之前通过 beforeEach 注入通过 cy.setCookie 设置 cookie，完成登陆。或者完成登陆请求保存 cookie。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);